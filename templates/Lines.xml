<templateSet group="Lines">
  <template name="contextFromView" value="var activity = v.context as FragmentActivity" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="begTransaction" value="supportFragmentManager.beginTransaction().replace(R.id.$container_framelayout$, $fragment$).addToBackStack(null).commit()" description="" toReformat="false" toShortenFQNames="true">
    <variable name="container_framelayout" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="fragment" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="progressBarVisibility" value="    override fun showProgressBar() {&#10;        binding.progressBar.visibility = View.VISIBLE&#10;    }&#10;&#10;    override fun hideProgressBar() {&#10;        binding.progressBar.visibility = View.GONE&#10;    }" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="compositDisposable" value="       compositeDisposable.add($Client$.instance!!.$function$&#10;            .subscribeOn(Schedulers.io())&#10;            .observeOn(AndroidSchedulers.mainThread())&#10;            .subscribe ({&#10;                response -&gt;&#10;                &#10;&#10;            },{ e -&gt;&#10;&#10;            }&#10;&#10;        ))" description="" toReformat="false" toShortenFQNames="true">
    <variable name="Client" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
  <template name="onClick" value="android:onClick=&quot;@{view -&gt; vm.$onHomeClicked$(view)}&quot;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="onHomeClicked" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="XML" value="true" />
    </context>
  </template>
  <template name="onClickFunction" value="fun on$Continue$Clicked(v:View){&#10;        &#10;}" description="" toReformat="false" toShortenFQNames="true">
    <variable name="Continue" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN" value="true" />
    </context>
  </template>
</templateSet>